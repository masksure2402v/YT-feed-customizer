const T="AIzaSyBopwfGD7jMnQ4MXbvPcfHZ7BJaj_awnSk";async function A(o,e,r,t){const i=[];let n=null,l=0,a=0;console.log(`🔄 Fetching videos from channel: ${t||"Unknown Channel"} (Target: 10 videos)`);try{do{a++;let y=`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${o}&maxResults=50&key=${T}`;n&&(y+=`&pageToken=${n}`),console.log(`🔄 API Call ${a} for ${t||"Unknown Channel"}${n?` (Page: ${n})`:""}`);const u=await fetch(y);if(!u.ok)throw new Error(`HTTP ${u.status}: ${u.statusText}`);const s=await u.json();if(s.error)throw new Error(`YouTube API Error: ${s.error.message} (Code: ${s.error.code})`);if(console.log(`📊 API response ${a} for ${t||"Unknown Channel"}:`,{itemsCount:s.items?.length||0,pageInfo:s.pageInfo,nextPageToken:s.nextPageToken}),!s.items||s.items.length===0){console.log(`⚠️ No more videos found for channel: ${t||"Unknown Channel"}`);break}const w=s.items.map(c=>c.snippet?.resourceId?.videoId).filter(Boolean);if(!w.length){console.warn(`⚠️ No valid video IDs found in this batch for channel: ${t||"Unknown Channel"}`),n=s.nextPageToken;continue}console.log(`🎬 Video IDs in batch ${a} for ${t||"Unknown Channel"}:`,w.length);const I=`https://www.googleapis.com/youtube/v3/videos?part=statistics&id=${w.join(",")}&key=${T}`,g=await fetch(I);if(!g.ok)throw new Error(`Statistics API HTTP ${g.status}: ${g.statusText}`);const $=await g.json();if($.error)throw new Error(`Statistics API Error: ${$.error.message}`);const v={};for(const c of $.items||[])v[c.id]={views:c.statistics?.viewCount||"0"};let p=0,b=0;const V=s.items.map(async c=>{const d=c.snippet,f=d?.resourceId?.videoId;return f?await U(f)?(p++,console.log(`🩳 Skipped Short: ${d.title}`),null):(b++,{videoId:f,title:d.title,published:d.publishedAt,thumbnail:d.thumbnails?.high?.url,channelId:r,channelName:t,views:Number(v[f]?.views||0),channelLogo:e}):null}),P=(await Promise.all(V)).filter(Boolean);if(i.push(...P),l+=p,console.log(`📊 Batch ${a} results for ${t||"Unknown Channel"}: ${P.length} videos added, ${p} shorts skipped. Total collected: ${i.length}/10`),n=s.nextPageToken,i.length>=10||!n)break;await new Promise(c=>setTimeout(c,300))}while(n&&i.length<10);const h=i.slice(0,10);return console.log(`✅ Finished processing ${t||"Unknown Channel"}: ${h.length} videos stored, ${l} shorts skipped across ${a} API calls`),h.length===0&&l>0&&console.warn(`⚠️ Channel '${t||"Unknown Channel"}' has only Shorts — skipped all ${l} videos.`),h}catch(h){return console.error(`💥 Error fetching videos from ${t||"Unknown Channel"}:`,h),h.message.includes("403")?console.error("🚫 API Key might be invalid or quota exceeded"):h.message.includes("404")&&console.error("🔍 Playlist not found - check uploadsPlaylistId"),[]}}async function U(o){try{console.log(`🔍 Checking if ${o} is a Short...`);const e=await fetch(`https://www.youtube.com/shorts/${o}`,{method:"HEAD",redirect:"follow"});return console.log(`📍 Shorts URL check for ${o}: status=${e.status}, finalUrl=${e.url}`),e.ok&&e.url&&e.url.includes("/shorts/")?(console.log(`✅ ${o} is a Short (final URL contains /shorts/)`),!0):e.ok&&e.url&&e.url.includes("/watch?v=")?(console.log(`❌ ${o} is NOT a Short (redirected to /watch?v=)`),!1):e.status===404?(console.log(`❌ ${o} is NOT a Short (shorts URL returned 404)`),!1):(console.log(`❓ ${o} - unclear result, defaulting to NOT a Short`),!1)}catch(e){return console.warn(`⚠️ Failed to detect short status for ${o}:`,e.message),!1}}const E="scrapedVideos",S="channels";async function k(){try{const e=(await chrome.storage.local.get([S]))[S];if(console.log("🔍 Channels found in storage:",e),!e||!Array.isArray(e)||e.length===0){console.warn("❌ No channels found in storage.");return}const r=await x(e);console.log("🎥 Videos organized by channel:",r),Object.keys(r).length>0?(await chrome.storage.local.set({[E]:r}),console.log("✅ Stored latest YouTube videos organized by channel:",r)):console.warn("❌ No videos found from any channels.")}catch(o){console.error("💥 Error in fetchAndStoreVideos:",o)}}async function x(o){const e={};console.log(`🔄 Processing ${o.length} channels...`);for(const r of o){const{uploadsPlaylistId:t,channelLogo:m,channelId:C,handle:i}=r,n=i;if(!t){console.error(`❌ Missing uploadsPlaylistId for channel: ${n||"Unknown Channel"}`);continue}try{const l=await A(t,m,C,n);l.length>0&&(e[i]={videos1:l}),await new Promise(a=>setTimeout(a,500))}catch(l){console.error(`💥 Failed to fetch videos from ${n||"Unknown Channel"} (${t}):`,l)}}return console.log(`🎯 Total channels with videos: ${Object.keys(e).length}`),e}chrome.runtime.onInstalled.addListener(()=>{console.log("📦 Extension installed. Fetching YouTube videos..."),k()});chrome.runtime.onStartup.addListener(()=>{console.log("🚀 Chrome startup detected. Fetching YouTube videos..."),k()});chrome.runtime.onMessage.addListener((o,e,r)=>{if(o.action==="fetchVideos")return k().then(()=>r({success:!0})),!0});
